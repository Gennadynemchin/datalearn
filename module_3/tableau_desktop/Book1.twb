<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0114.0916                               -->
<workbook original-version='18.1' source-build='2020.4.1 (20204.21.0114.0916)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (Sample - Superstore)' inline='true' name='federated.1x1ixga0sc2hbk1alquse12xg6ip' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.00di0kh0m8e8k9122bx3n0hiq1ai'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Github/datalearn/module_2/2.4/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Orders].[Region]' />
                <expression op='[People].[Region]' />
              </expression>
            </clause>
            <relation connection='excel-direct.00di0kh0m8e8k9122bx3n0hiq1ai' name='Orders' table='[Orders$]' type='table'>
              <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='excel-direct.00di0kh0m8e8k9122bx3n0hiq1ai' name='People' table='[People$]' type='table'>
              <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                <column datatype='string' name='Person' ordinal='0' />
                <column datatype='string' name='Region' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.00di0kh0m8e8k9122bx3n0hiq1ai' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Orders].[Region]' />
                <expression op='[People].[Region]' />
              </expression>
            </clause>
            <relation connection='excel-direct.00di0kh0m8e8k9122bx3n0hiq1ai' name='Orders' table='[Orders$]' type='table'>
              <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='excel-direct.00di0kh0m8e8k9122bx3n0hiq1ai' name='People' table='[People$]' type='table'>
              <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                <column datatype='string' name='Person' ordinal='0' />
                <column datatype='string' name='Region' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.00di0kh0m8e8k9122bx3n0hiq1ai' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B801:no:A1:B801:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_561F2CE496974F8C8C585B003C1851D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit ratio' datatype='real' name='[Calculation_911415980422197248]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column caption='Delivery time' datatype='integer' name='[Calculation_911415980422344705]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
      </column>
      <column caption='Unique customers' datatype='integer' name='[Calculation_911415980422533122]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Customer ID])' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' hidden='true' name='[Region (People)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_561F2CE496974F8C8C585B003C1851D2]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_911415980422197248]' derivation='User' name='[usr:Calculation_911415980422197248:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_911415980422533122]' derivation='User' name='[usr:Calculation_911415980422533122:qk]' pivot='key' type='quantitative' />
      <group caption='Tooltip (Country,State)' hidden='true' name='[Tooltip (Country,State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category, Sub-Category'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
        </drill-path>
        <drill-path name='Country, City'>
          <field>[Country]</field>
          <field>[Region]</field>
          <field>[State]</field>
          <field>[City]</field>
          <field>[Postal Code]</field>
        </drill-path>
        <drill-path name='Customer ID, Customer Name'>
          <field>[Customer ID]</field>
          <field>[Customer Name]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#51b364'>
              <bucket>&quot;[federated.1x1ixga0sc2hbk1alquse12xg6ip].[usr:Calculation_911415980422533122:qk]&quot;</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>&quot;[federated.1x1ixga0sc2hbk1alquse12xg6ip].[usr:Calculation_911415980422197248:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_561F2CE496974F8C8C585B003C1851D2'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Orders].[Order ID]' />
                    <expression op='[Returns].[Order ID]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[Orders].[Region]' />
                      <expression op='[People].[Region]' />
                    </expression>
                  </clause>
                  <relation connection='excel-direct.00di0kh0m8e8k9122bx3n0hiq1ai' name='Orders' table='[Orders$]' type='table'>
                    <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                      <column datatype='integer' name='Row ID' ordinal='0' />
                      <column datatype='string' name='Order ID' ordinal='1' />
                      <column datatype='date' name='Order Date' ordinal='2' />
                      <column datatype='date' name='Ship Date' ordinal='3' />
                      <column datatype='string' name='Ship Mode' ordinal='4' />
                      <column datatype='string' name='Customer ID' ordinal='5' />
                      <column datatype='string' name='Customer Name' ordinal='6' />
                      <column datatype='string' name='Segment' ordinal='7' />
                      <column datatype='string' name='Country' ordinal='8' />
                      <column datatype='string' name='City' ordinal='9' />
                      <column datatype='string' name='State' ordinal='10' />
                      <column datatype='integer' name='Postal Code' ordinal='11' />
                      <column datatype='string' name='Region' ordinal='12' />
                      <column datatype='string' name='Product ID' ordinal='13' />
                      <column datatype='string' name='Category' ordinal='14' />
                      <column datatype='string' name='Sub-Category' ordinal='15' />
                      <column datatype='string' name='Product Name' ordinal='16' />
                      <column datatype='real' name='Sales' ordinal='17' />
                      <column datatype='integer' name='Quantity' ordinal='18' />
                      <column datatype='real' name='Discount' ordinal='19' />
                      <column datatype='real' name='Profit' ordinal='20' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.00di0kh0m8e8k9122bx3n0hiq1ai' name='People' table='[People$]' type='table'>
                    <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                      <column datatype='string' name='Person' ordinal='0' />
                      <column datatype='string' name='Region' ordinal='1' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.00di0kh0m8e8k9122bx3n0hiq1ai' name='Returns' table='[Returns$]' type='table'>
                  <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
                    <column datatype='string' name='Returned' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Count of returns by managers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1x1ixga0sc2hbk1alquse12xg6ip' />
          </datasources>
          <datasource-dependencies datasource='federated.1x1ixga0sc2hbk1alquse12xg6ip'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Person]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Person]' derivation='None' name='[none:Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Person:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[cnt:Returned:qk]</rows>
        <cols>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[tqr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{464EA848-442E-4DE5-8171-1678C330978E}' />
    </worksheet>
    <worksheet name='Count of returns by product'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1x1ixga0sc2hbk1alquse12xg6ip' />
          </datasources>
          <datasource-dependencies datasource='federated.1x1ixga0sc2hbk1alquse12xg6ip'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[tqr:Order Date:qk]</rows>
        <cols>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[cnt:Returned:qk]</cols>
      </table>
      <simple-id uuid='{4696234D-1AC8-462A-A9C3-563B0FE82832}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1x1ixga0sc2hbk1alquse12xg6ip' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1x1ixga0sc2hbk1alquse12xg6ip'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[qr:Order Date:ok]'>
            <groupfilter from='1' function='range' level='[qr:Order Date:ok]' to='4' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]</column>
            <column>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[qr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[Longitude (generated)]' field-type='quantitative' max='-7382701.3493131213' min='-14671491.418636475' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[Latitude (generated)]' field-type='quantitative' max='7338496.6396336202' min='2643022.6901533045' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:State:nk]' />
              <color column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[sum:Profit:qk]' />
              <lod column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Country:nk]' />
              <geometry column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:</run>
                <run bold='true'><![CDATA[<[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:State:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Profit:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1x1ixga0sc2hbk1alquse12xg6ip].[sum:Profit:qk]>]]></run>
                <run><![CDATA[
<Sheet name="Profit by city" maxwidth="300" maxheight="300" filter="<All Fields>">
]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[Latitude (generated)]</rows>
        <cols>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FB58D1E9-B052-41EB-9101-B480218D16FF}' />
    </worksheet>
    <worksheet name='Profit by city'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1x1ixga0sc2hbk1alquse12xg6ip' />
          </datasources>
          <datasource-dependencies datasource='federated.1x1ixga0sc2hbk1alquse12xg6ip'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[Tooltip (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Profit by city]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[Tooltip (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:City:nk]</rows>
        <cols>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{A80A5B44-69FE-4BE5-830C-D11E273E5087}' />
    </worksheet>
    <worksheet name='Profit by segment'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1x1ixga0sc2hbk1alquse12xg6ip' />
          </datasources>
          <datasource-dependencies datasource='federated.1x1ixga0sc2hbk1alquse12xg6ip'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[qr:Order Date:ok]'>
            <groupfilter function='level-members' level='[qr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]</column>
            <column>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[qr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[sum:Profit:qk]</rows>
        <cols>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{A01E3310-6E87-414B-A317-7BB535AC373E}' />
    </worksheet>
    <worksheet name='Profit ratio per person'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1x1ixga0sc2hbk1alquse12xg6ip' />
          </datasources>
          <datasource-dependencies datasource='federated.1x1ixga0sc2hbk1alquse12xg6ip'>
            <column caption='Profit ratio' datatype='real' name='[Calculation_911415980422197248]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Person]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Person]' derivation='None' name='[none:Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Returned]' derivation='None' name='[none:Returned:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_911415980422197248]' derivation='User' name='[usr:Calculation_911415980422197248:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Returned:nk]'>
            <groupfilter function='member' level='[none:Returned:nk]' member='%null%' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Returned:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[usr:Calculation_911415980422197248:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Person:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[usr:Calculation_911415980422197248:qk]</rows>
        <cols>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[tqr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{EF0690B1-8FDA-4C73-B70C-9ABFB109259B}' />
    </worksheet>
    <worksheet name='Profit ratio per unique users'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1x1ixga0sc2hbk1alquse12xg6ip' />
          </datasources>
          <datasource-dependencies datasource='federated.1x1ixga0sc2hbk1alquse12xg6ip'>
            <column caption='Profit ratio' datatype='real' name='[Calculation_911415980422197248]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column caption='Unique customers' datatype='integer' name='[Calculation_911415980422533122]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Customer ID])' />
            </column>
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_911415980422197248]' derivation='User' name='[usr:Calculation_911415980422197248:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_911415980422533122]' derivation='User' name='[usr:Calculation_911415980422533122:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[qr:Order Date:ok]'>
            <groupfilter from='1' function='range' level='[qr:Order Date:ok]' to='4' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]'>
            <groupfilter from='2016' function='range' level='[yr:Order Date:ok]' to='2019' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]</column>
            <column>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[qr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[usr:Calculation_911415980422533122:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[usr:Calculation_911415980422197248:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[usr:Calculation_911415980422533122:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1x1ixga0sc2hbk1alquse12xg6ip].[usr:Calculation_911415980422197248:qk] + [federated.1x1ixga0sc2hbk1alquse12xg6ip].[usr:Calculation_911415980422533122:qk])</rows>
        <cols>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{49360260-8230-44F4-B145-E7005CA06C94}' />
    </worksheet>
    <worksheet name='Sales per subcat'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1x1ixga0sc2hbk1alquse12xg6ip' />
          </datasources>
          <datasource-dependencies datasource='federated.1x1ixga0sc2hbk1alquse12xg6ip'>
            <column datatype='string' name='[Person]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Person]' derivation='None' name='[none:Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Returned]' derivation='None' name='[none:Returned:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Returned:nk]'>
            <groupfilter function='level-members' level='[none:Returned:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Returned:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Person:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
                <format attr='minheight' value='413' />
                <format attr='maxheight' value='413' />
                <format attr='minwidth' value='662' />
                <format attr='maxwidth' value='662' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Sub-Category:nk]</rows>
        <cols>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{D6CA7D7A-4FC2-402D-877C-CB576CC13D99}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FCEFDE14-6A03-4D02-9534-02108ED51BA0}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1x1ixga0sc2hbk1alquse12xg6ip' />
          </datasources>
          <datasource-dependencies datasource='federated.1x1ixga0sc2hbk1alquse12xg6ip'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[sum:Sales:qk]</rows>
        <cols>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Segment:nk]</cols>
      </table>
      <simple-id uuid='{8A0E8E8C-CDD5-441C-95EC-EEF94863578F}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Profit ratio per unique users'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[qr:Order Date:ok]' type='filter' />
            <card param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[:Measure Names]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[qr:Order Date:ok]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[tmn:Order Date:ok]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[tyr:Order Date:ok]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA90EB61-892F-48F7-9FDB-F422012974E8}' />
    </window>
    <window class='worksheet' name='Profit by segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[qr:Order Date:ok]' type='filter' />
            <card param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Returned:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Segment:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[qr:Order Date:ok]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[tmn:Order Date:qk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2BA211A-9912-49AA-9A3D-0D57B0A18CB5}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[qr:Order Date:ok]' type='filter' />
            <card param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Country:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Order ID:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Product ID:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:State:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[qr:Order Date:ok]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4A7DA01-7446-4208-8737-56AC6444AC41}' />
    </window>
    <window class='worksheet' name='Profit by city'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CFF55126-42F0-4FDF-80A9-58BD72459662}' />
    </window>
    <window class='worksheet' name='Count of returns by managers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Person:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Person:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Returned:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{222D9E22-4833-4ED0-AA17-7E7F44A21F0C}' />
    </window>
    <window class='worksheet' name='Count of returns by product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Category:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Returned:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[tmn:Order Date:qk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E289E4A2-7EB9-4F69-83F3-0336E6AFE70F}' />
    </window>
    <window class='worksheet' name='Sales per subcat'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='152'>
            <card param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Returned:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Person:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Person:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Returned:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Sub-Category:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18685354-5850-4924-BD0D-5D752BEC875E}' />
    </window>
    <window class='worksheet' name='Profit ratio per person'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Returned:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Person:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Person:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Returned:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[tqr:Order Date:ok]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84C65F33-721D-4673-92B7-FAD91EC2B4F8}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Region:nk]</field>
            <field>[federated.1x1ixga0sc2hbk1alquse12xg6ip].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A31C5A1-65B7-4206-B6B6-D128A0039E59}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C66D6A0F-A429-4CFC-9F1B-3524E33BDC00}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Count of returns by managers' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29Z3gc1323fc/MVuxiF71XgkQn2EWKIkV1ySq2JduyZVsucYudN48d1/hN
      0+M4iWM7jp24xSVxjS3LqlYX1dh7AQiAAIheF4tdYHub8nwARREiiUJUEnNfly6Bu7MzZ8pv
      zjn/dgRN0zR0dJYp4mI3QEdnMdEFoLOsWVAByLK8kIfT0ZmSBRWAPt3QWWroQyCdZY0uAJ1l
      jS4AnWWNLgCdZY0uAJ1ljS4AnWWNLgCdZY0uAJ1lzawEoMoxujva6B0cQdU0XH1duLwBNFWm
      v6sDjz8yV+3U0ZkXDLP5sZJIYDAnMdTfjln10emW0UKNKKUZeCIQaTxF8pZNmIS5aq6Oztwy
      KwEYrXZCnlME40aEaISC8lpM3fUMhmMUFFcTkRoIxUEQEwAoiqKHQ+gsKWYlgFg4QN7KtShn
      ThFFYGTABf4IablOxka9+MeiZKwEo2g89xuj0TjJHnV0FpZZzQFEUeNM40kUaxZ5pVU4E4Ok
      FK2iqLCMhKebrLJqLPo0W2cJIyxkRlgikdB7AJ0lhf5+1lnW6ALQWdboAtBZ1ugC0FnW6ALQ
      WdboAtBZ1ugC0FnW6ALQWdboAtBZ1ugC0FnW6ALQWdboAtBZ1ugC0FnW6ALQWdboAtBZ1ugC
      0FnW6ALQWdboAtBZ1ugC0FnWzK4uUDxMY0M9IWysqy3nxIFdJMxZbFq7glPHT2LNKqW6LB+9
      LJDOUmWWPYBIWfU6suwQDHlxZteyfcsaRod6yS1fhxRwEVbmpqE6OvPBrHoAyWjA09OB0ZlH
      qs1Ai+sEL/W0UlqWQYrFimwRSciQUPXCWDpLk1kJIOjqpv5MN+lpIWxiFqLZhJSQsduTaTy8
      G8HsYGsFGAS9MJbO0mRWdYE0VSVxdulTg9GIIicQBAlJElFkGUGSkMQ3R1l6XSCdpYZeGEtn
      WaObQXWWNboAdJY1ugB0ljW6AHSWNboAdJY1ugB0ljW6AHSWNboAdJY1ugB0ljW6AHSWNboA
      dJY1ugB0ljW6AHSWNboAdJY1ugB0ljW6AHSWNboAdJY1ugB0ljW6AHSWNbOqChEPjXL0RD3B
      uMimdZUcO3QCxZLCltp8jhxvRrJncN01a5D0ylg6S5TZVYXQNFQ5RkvrGdKNKpGcWow99XjM
      RvJyKwn2NpBStha7OF45QlEURFHvdHSWDrPqATQ5zOnWPkpXVaK5W/FF46gJDVOSQEJOkEho
      SCJIkjS+vaad+1tHZykwqQDGhjo5fLIVFQCJqvXXUJTpOPd9ZMzLkKsfz6iPNeuq8B0/iOrI
      ZV1OFkePHcSaUYLdAMJ51UH1HkBnKTHpECgRC9PX3khTn0J5dhwXZWxbk3/ZB7sS6wIdPt2P
      JIqsL89d7KbozAOTvo6N5iQKSsqIjrSw/3gH6en2hWrXkkBVNX7/ciO/e/kU8YRe5fdqZMrx
      iKYqDJ4ZZNWackKB6EK0ackQCMcYC0bpcfnoH/EvdnOuaIY8QR7b1YyiqovdlAlMKYB4NIic
      UOk400FMWVqNn2/6RwL4QzHyMpI52jqoV7aeBfsae/nl8yfx+iOL3ZQJTCkAW2oBd7zrZvJz
      V1G3MmMh2rRkcHmDZKYkccPaYg409i12c65ojrUOAjAwEljklkxkSgEER7rZc7CJSMDH6BJT
      73yiaRon211Ul2SyoSKP3mE/g57gYjfriiQcS9Dj8mE2SjR0DC92cyYwpQBESSDgG8XrHSW6
      jCaCqqrR1uelMMtBbrqd0twU9p3qXexmXZE0dbkRRYH15bkMeq6wHkAyJXPXux7gAx94L+X5
      qQvRpiVBOJbA4wtTXZKJJIpcV1vIoeZ+4vLyeQnMFU2dboqynGyqzKel10MsIS92k84xpQBU
      Ncrjv/4Jv/rN72ntH12INi0JugbHkCQRp80CwJaaAnqGfUtuDLvUScgKDR3D1JRmUpLjJCGr
      jC0ha+KUoRCmpHTue+/9yAhkOq0L0aYlQdfQGEXZTtIc4+ecmWKjONvJ0ZZBirOdCIIe4Tcd
      vP4IA54Amyo3kp+ZTFxW6BgcIzttafiUphWXoGkao/3NtPQuH1t4S6+HlfmpGKQ3L9GWmkIO
      NvWhW0OnT4/LhyQK5GUkYzYaKMpy0jfsW+xmnWNKASiJMG3NzeNDAnF53HlZVul2+SjOTpnw
      +TWVeXS7fAx5dWvQdDlxxsW6VTmYjeNBkGX5qTT3jKCqS+NZmnoSbLSx/bY7uf/++ynPcy5E
      mxYdjz+MPxRjVUHahM9z0satQfsbdWvQdGnpHaG8MP3ckLEsLw2XN0hiiRgTppgDRNn19B9p
      HBIozpZIX3U919UVLEzLFpEBz/gNeus4VZJEttYWsqehh7dfV4HRoId2T8ZoIEL/SIDqksxz
      n5XlpY572MMxMk2zisafE6boAQysqKzGosnklVVSVpK1MK1aZLqHxijOScFykRu0uSqfvmE/
      /bo1aEqau0dItVvITn3zRZLqsJCabKV3eGnMJ6cUQFp6CmGXB1WK0dJ89YcDaJpGa6+HsryL
      +zyy0+zkZzo4rscGTcnRlkFKclJIsrwZAp9sNZOfkUxz98gituxNppwDWJMzyMozc3h/E4Ur
      chaiTYuKrKj0uv2szE+75DZbawvZ39iHqgvgkkTjMmf6vdStzJ7wuSgKFGU56XEtDUvQpAJQ
      4n52v7aL3PU3cPe2dYQCS6Pbmk98oRgDIwHKJvF6bzprDXJ5QwvYsiuLgZEAAyMBqoozL/iu
      vCid9gHvkpgITyqAjgP7MJetR+s9ysunhllVnD3Z5lcFnYOjpCZbcCSZL7nNG9YgPUL00rT3
      e0lzWCnISL7gu/wMB/GEgnssvAgtm8ikAtAkOPrKMxxr7mXM3UfHgHeh2rVotPR4yE1PxmG7
      tAAMksi1NQUcbO5HXmY5EtPlxBkXlUUZiOKFHvPiHCeqptG7BBxik9qhyq+7g/LrLv29Go/g
      DUdJMtmxWgSCoTjJyUkkoiEiikgiGiYtPZ0rJWhAVTWaut1UFWdOGeqwpaaAp/a20N7vpaJo
      eeVJTEVCVjjdM8Kf3bnuotfRZJAozk6hpdfD5urFNatPKoDu40cYSzIjR21UrcrFZDZPCA0Q
      JCMmg5ehISjMi9PeHqayqgDvYDdC6gqC/T2YnOnYpTcni0vZcjIWjDDoCfLAzbVTtjMrxUZN
      SRYvHelgVUGaHht0Hi09HgCqSzIueR03V+Wxv7GPhKxMeKYWmkkFkF2ax4Enn6TLrXL6VAab
      briV8vOsI4JkwGwc34Uk2hCUPg7u6SWnJJ10gxGTUUBRQWF8sqOqKrK8dEJh30q/20csLpOX
      bp9WO7fW5vNfTx0jGIlhXQJOnaXCibZBirMd2C2GS17HgkwHA54g4Uhsgpl0oZn0rllS8nj3
      Aw/yynPPMByzkJk2MRQiHhrl8JEjuL1WkpJW4Q+HSCCRkZJC/cHXMCRnstUIkjB+GE3TlnRZ
      lAFPiKxUG+lO27S2ryzOQhAFOgZ9rF159ZuIp4Oiqpzu9bChPHfSe12al0pCVvAGYziTkxaw
      hROZ8rUV9PahOCq4tTDO8YYebrqm9Nx3Jlsq23bcde7fOTmF5/6+8ebLrx+0GIw7wLysuIQD
      7GKk2C3UrchmT32PLoCzeP0Relw+Pnhb3aTbWc1GMpxJdA35KM1dvESrKQdf9tR8lNEWXj7S
      RWV53kK0aVFQ1HGrxGQOsIuxpbqA+nYXoWh8nlp2ZdHj8qGq2iU96W9gMRlYkZdKa+/ieoSn
      HrhKZm668z5MBpW4fPWWNYzGZTqHxvhkQfqMfrdmZTaxhEJz1wgbK6/eF8R00DSNIy2DlBel
      T2tiW5jl4EjL4AK07NJM0co4x3c9zx8ff4E9rzzP4aaBhWnVIuDyBrGYDOcywKaL1WykriyL
      Q839S9rCtVA0dblZtyp3Wlax8sIMBj0BQpHF6z2nlKnRbCXJaiI5eyWbVhdOtfkVS327i7x0
      +6Qe4Euxva6Yo62DRGJL18K1EHj8EfrcfsoLpjeMzEq1oaraokbWTiEAEyurKvC7umk7fZp+
      99UbCzToDZKf6cBgmPkwr6IwHVXVONN/9XvKJ6Opy01mShKFWdNLnMpOteGwmelZRI/w1Hdb
      U0lKy6a6uoJU+8zfjlcCCVmhqdNNTcmFgVvTwWEzs2ZlNrtOds9xy64sGrvclBekYzVP3ydS
      kpNC+yJWG5lSAObkDOoqSq7qRHD3WBhfKEZu+oWBW9NBEAQ2V+VT3+4iHE3MceuuDOIJhdPd
      I6wvn974/w0qijLoGhpbtJiqaSTFR+hoa6P5VAPD/thCtGnBGfIGkURhRj6At1K3Mpt4Qlly
      pf8WiuGxEB5fmKrimcVFFWc7GRgJEIktzotj6h7Alsld73oXN2+tYNRzdca/n+n34rRbLpoC
      OV1sFhO1K7LYdbJrWVqDzvR5SbIYZ1zvpyjbSSwh4/EtTt3ZKQUQC7n50x8eZufhbooLZ+Yk
      uhJQNY1ul481ZbPPddheV8TxtiEC4eXlFNM0jYbOYeou4xpaTAayU+20DyzOPGDq4riCSCwR
      JREJEpGvvtj3eEKhc3B0TkKaK4szMBkl6jtcc9CyKwdV1TjRNkTlZVxDi8lAaW4KZ/o989Cy
      qZlSAJGAB1PqSrasLqS/d3EaOZ+EonFGxsIUZDmm3ngKHElm1pRls//U8soUG/AECEbiVM5w
      /P8GRdlOOgbG5rhV02NSAajxEIoll+JMjdaBMDWVV1aA23ToHvKRmmwlfYYe4IshCAKbqws4
      1TlMIHx1GgwuxtGWQbLTbKQ7Li+qs7wgnSFvYFEsaJMKoPPIQQZjAms2bWNLbR6nW/oXql0L
      RkvPCNmptjmL568ry0bTNOrbl4c1SNM0mrtHqC7OnJH9/3yyUm2AsCiVtycVQHZJDgdeeJbd
      u3fz4utHycqbWaDYlUDX0HgEqDRHWUl2q4m6smz2nupZFtagUDRBx8AoVZfpRIRxATiSTHS5
      5m8YJCsqv3z+BLtOdE+oSzqpZO15Vbznniy8YyGq69aRNs1EkSsFWVHpGBhle13RnO73utVF
      /ODxQ/jDsXPrC1yt9A378YdjbJjlOsqF2U46B8Zgwxw17C00d7l5el8bBklkxBfmHdsqkCRx
      qkmwQHJKBsUlxaQ77VdMcvt0cY+FSMgKRdlzW/S3pnR8VZlTHe453e9SpK3fS35mMnaraVb7
      qSrOpGNgdF48wpqmcaCpj5UFaXzhfdfy5N4Wfvr0MeIJZXrrA1yttPV5EQSBgszZW4DOJ/ns
      MOjAVV5FWtU0GtpdrF81u7c/QFGWA9docF4mwuGYzNHWQXasKWZjRR7//4PbON42xDd/t3d5
      C6BzcIzCLMdFa9fMBkEQuLamgBPtLoKLGOs+38QTCm393ssOIjyf0txUgtH4vKwj3N7vJRiJ
      s6FiXKgVhRk89NEd+IKxWQpA01AVBVXV0DQNRU6gKCqapiEnEktuVfDzUc6O/yuK5mdiX1ua
      hUESaWi/ep1iXUNjyLJK4RwMIU1GiexUO23zEFK++2zOdrrzTTNtbnoyf/vh7bMTgBINcuLk
      Xlq7xpDDbl57bQ+v7D7E2Egve/buY8+BE8hL1BASjcv0DPsozkmZeuPLwGEzU7cii9dPdl+1
      RXSbutwU5zhJtc9+om8xGSjLS53zZVT9oRjH2wbZsbYY8S1Rqk6bZRo5wZMgWZOpqamgvx8i
      7mFWbt6BqaeenrEAtZu2E+qtJxgHmzg+rlMUZcmYBt1jQaKxBCtyHMTj8zNM2ViRy0/+dBzv
      WHDSUotXKoea+1mVn4qiyChzUOe2MCuZQDg+p/fj8Ok+FEVlZV7KRfc7Z9WcDGYD4UCYWFQl
      KUkgFo0QiapkGMAovVkfZqnUBeoc9JGRYiPVYcNkmp82rS/PwyCdoLnXy/a64nk5xmLh9Udw
      eUN84NbVmEyzswC9QUVRJgca++Zsf4qisqehj01V+aQ6Lm7Cn9UQKB4a5eihU7S3NxJJzifW
      e5KQLY3S3EIGW4+jOnJIWqKrCHUNjVGQ6cA8jxXdrBYja1bmsP8qrCLd3u8lmpApy5u7COGs
      VBsDczgEGg1EOdPn5cZ1JZfcZlZ332RLZev2m8/9O33zm5V0N167bTa7nnfeKMz61nHhXCIK
      AluqC/j+Y4cIhGMkX0bC/VJE0zQau91UFWXMaVnDTGcS4WiCWFyekxfTkZYBMpxWVkxSeGtZ
      mkGjcZnh0RBFcxABOhU1pZkkWYzsPNI578daKBRV43T3yITF7+YCQRDIS0+ekyR5RVHZXd/N
      NVX5k4ppWQqgd9iPomqUzJMF6HySk8y8/5bVPL67GddVsr5wMBKnx+WbdfjDxchNt9Pjmn31
      ka6hMbqGfFxTNXkE87IUQL/bj9VsIDV59iHQ0+G61YUUZDp49PXmBTnefNM1OIbdaiIjZe6L
      2gqCMCflZY6cDdGeysy97ASgaRqtfR5WFaTNuQf4UhgNEu+9qYY9DT20XQVJRUdbB1hZkDbr
      +J+LYTZJdA2NzcqJGo3L7G/sZXtd8ZQlGpedABRVo2twjNKcha1IvHpFNhsr8/jtzoYlsTjc
      5aKqGo2dbqqnsYrO5VCSk8qQN0hwFnnVPS4frtEQ108jynfZCSAcTTDoCVI+TyEQl0IUBd5/
      y2rO9Hk51Hzl1lgd9ARwj4XnLYSkONtJMBxnLBi97H3sru9h9YosUpKn9lAvOwH0j/gJRuPT
      jgCNNjYSOVk/J8fOTrVx99ZyfrezgWj8yqwj2jE4htEgzpsBwWIykJeRfNnzgGhMZnd9N1uq
      C5DEqR/vZSeAzoFxB9h0UiCVYBDvz36O5z+/T6ylZdZhHIIgcOe1q1A1jWf2ty2ZsJDpomka
      R06Pj/+NhvnxcBoN4qyS5I+3jZdbX7NyeiValp0AWvs8FGc7p+VoiZ48iRoKk7TtOtzf+S7y
      0NCsj+9IMvOeG6t5cs/pK26h7bis0D7gZcM8LpQiCAJl+am09c3cWKBpGvub+qgtzZp2gv6y
      EoCmaXQNjU2r+9YUheBLL2Pbvo2U996PuaIcz/d/gDI6+wJO21YXUZDp4Ik9p2e9r4VkxBdh
      yBuct/H/G5TmptI/EpixscAXitHY6eaWjSum/ZtlJQBfKMZoIDotD2a8u5t4Vxe2HdcjWq2k
      f+qTaIkE3p/9HHWW0YpGg8QDt9Ty6vEuWq8gs2hzl5v8DAc5Myx/COMvHzUUmtawLzfNjlES
      6Ryc2TCosXO8EkfVDAp0LSsB9A77EASmvIGaphF8aSeW2lqMBeMLOYs2Gxlf+Dzxnh78jz+B
      Nstkn+qSTK6pyud/X7pyzKKNXW5W5qdeVg3V4EsvMfiVrxJrmtoZmO60YrOa6JvBehSapvHy
      sU62VOdjMk5/frKsBNA95CMzxTZlbL7schE5egz7bbcinGdJMGZnk/G5zxJ44UWCO1+e1ttM
      1TQ84dAFSTGSKPLhO9bQ2ufh0OmlbxaNJ8ZXf19/GeN/JRDA9+jjGLIy8Xz/B8TOtE+6vSSK
      rMhLPbfg9nRwj4Vp6nJzbW3hjPwTy0YAmqZxumeE0inG/5qmET54CCk5GUtN9QXfm8vKSP3w
      g/j+8AiRo8cm3Vc0keCp5lP8YP8eTrsvTI1Md1i589pV/PL5E4tWHny6DHnHE9ZX5M3M/Klp
      GoHnX0BKTSXjrz6HuaoSzw9/hOyd3My5IjeFnmHfhBo+k3GgqY/MFBsrZxievWwEkJDVcQdY
      4eQTOC0eJ/TKq9jfdjuCdPGu1LZ9O/bbb8P7s58T6+i4cB+ahjsY5OdHDtDp9VCdncPTpxsJ
      xiaWSxQEgXuuLUcSRJ7e13r5J7cANHYO47SZZ7yIiDwwQPDlV3C++z6k5GTSPvVJjHm5uL/5
      7UkNChVFGQx5AvhCUzvEErLCvlO93LiuBMsMq9MtGwEEIjH6R/xTrgMcOXIULR7Huv7SFZoE
      UcR5372YKyrw/vDHKP43x6qaptHmcfPTI/uxm818bOMW7q6oRhQE9vVcGBLttFt43y21PHOg
      DffY0jSLqppGU/cINaVZM/qdpmn4nngSU1Eh1nXrABDNZtI+8QlAw/vTSxsUCrMc+MNx/KGp
      a6z2uwP0uHxsrZn5Io7LRgDDoyGMkjRpBKOWSBB6/XWStm7FkDZ5rJAgSaR/6pNIaamMfO8/
      UGMx4orMKx1t/Ob4UTYXFvPBtRtxWCxYjEbuqqhhb3cng4ELJ3bX1xWRm57Mr16oX3LOMV8o
      xq+eP8mx1kG2zXCV0HhHJ5EjR3He/54JvankdJD55S+RcA3h/fFP0C4iAovJQFGWY1pWsleO
      dVKSk0Jm6iT3VlWJd3YSqa8n2thIrL2deGfn3OUEL3XeqGAwmQc43t1NvLOLlAc/OK19iklW
      0j75CYa//k+4f/ELnl1fR1/Az/vWrKMqM3vCZKwiM5MVaem81NbC+9duwHDe5FoQBO6/sZpv
      /HbveKDeLJZqmktOd4/wX386SiSW4IvvvXZG5c81Wcb/2GNYN6zHtOJCu7whLY30z3wa9ze/
      je/Jp3C+674JBgeDJFKQ5aBraPLkGFlR2d/Yx13Xrrpk6IMmy/gef4LA8y+ApoGioMViIAjL
      RwDN3SMUZDouWQRXU1UCL7yIqazsnOlzOojp6cQ+/CDR//g+BYrMOz70YVJttgssEaIgcndl
      Df+5bzenXIOszZ2YqLF2ZQ7bVhfyi+dP8Lcfun7eQg2mQzAS5/mDZ/jj603sWFvCh26rwzbD
      0OfIsWPEWlrJ+ed/mvBgn4+5rIzMz3+O4X/9FqLViuPuu859JwgC5YXpvHa8a9LjNHe7iSbk
      Sya+yB4Po7/4FfH2M2R89i+xrF49/sVZIczZEEhTFU4d3cf+I6eQ1QSn64/Rt4gLIJ+Poqj0
      DvsnXQVGGRsjWt9A8h23T9uMpmoaB3u7+aV3mOG776Ty8DHMp05d8vdp1iSuKy7lxbYWYvLE
      YDhBEHjfzbW09nrZd2rxSir2unx847d7eP7QGf7qPVv41D0bZvzwa7KM75FHse3YgZQ5ea9h
      Ki8n7WMfxf/4E4QPHJzwXXF2Cj3D/knXWjjY1E9FYTrZaRdWfYi1dzD8z99A8fnI/OpfY62r
      QxCE8f9EEcFonLseQJF9YM5jY2UBnt4zGNOKcLc3k5F2DZZFnmm4RkMEIzHyMy5twQi9vgtD
      ejrmivJp7TMUj/FsSzPNbhfvqKplbW4+QZud0Z/+HENGBuaVKy/4jSAIbCtZwWm3i5fOtHBX
      RfUEsWSm2Lh76yp+/3IjW6oL5rVixVuJJWReOtzBI681UlWcyXf+4naSk0yXFfMfen0XajhE
      8p13TPl7QRBI2roV1R/A89OfIjqSsVSPm59z0+3YLEYGPcGLFhQIhGMcPj3Ah+9YM2H4o8ky
      ob37GPvt/2LdtJHUDz2IaL6472furrCi4Opvx+PzUJpnISUzHXN4gEgCpEUujNU96MVqNpLl
      tFy0OJIWjRJ8/XWSbroJWZJgilCHwYCfJ043omgaD9atJ9/hJJFIYL5+B5aeXkb+8/ukfeXL
      SBkXvv0kYEdJGY821bMmK5ds+0Sv9NuuWcG+U738aV8Lb9+6albnPV36RwL86sUG2nq9vP+W
      Gm5YW4xBEkgkZu6bUH0+fH96mqTbbkNNTp52kSvzjTeQ5PEw9uRTpBYXIxiNJFsM2CxGGjtd
      lGRf+PJqaB8iHI1TW5J+7jhaIkHg4T8QPXgI+73vxLrjemRBuOQ9nbseICFSVluNt7ODuOjA
      19NBZCzG2lVgFBa3MFany09hlpOUSxRHCh09CvE4zptuRJykKJOiqpxyDfJEUwNVmdncU1WL
      9fzzMUH6Rz6M+9+/i+/H/0Xml76IlHzhjavNzaXR7eK5My18fNNmROHNt1eaycT9N9by82eO
      cV1tEbkZyWiJBIjiJf0Sl4usqLx+optfv3iS0txUvvnpW8lNt192ppemafhefQ1RknDecfuk
      1/JipL33fjw/+BHhxx4n5f0PIJgkVuanMeQNXbRY1usne9hYmU+yzYogCMjDw3h/9t/II24y
      P/85TOXlU57LnA1OTHYnYixIVnk1ZYWlpFqgrKYW0yIvKqBqGu39o5TkXLyAqybLBF95Fes1
      1yDaLx0jpKgqT59u5LHGem4vr+LemrqJD/9ZBJNpPHAuEmX0V78ef3jfgiiI3Fy2isGAn5OD
      E8MgtESCLVkmMojzyBN7Gfnhj3E99DXc//otwocPzzoG6Q18oSj//ocD/Paleu6/sYavfmAb
      eRnJs0pzVLxeAs8/j+O+ey855JgMwWgk+Z67Ce3eg/9PTwPjkaEtvR7iiYnxUoFwjBNnXGyt
      LQRNI1LfgOvr/4SmKmR95cuYKyqmdS5z1gMIooGiFW922QUlZXO161kRiSUY9AS4bdPFQ2Tj
      PT3EW9tIvYTpU9M0vJEwjzXW44tG+NC6TaxIS5/04kopKWR8/nMMf+3r+B57HOd73j3BEqKp
      KhkGEzemZ3Ji315KUjPRenqQh4ZI9PahJRLcm5TOD8K1bEkXqLp+O4meHrw/+28MT/4Jx9vv
      wbJ2zYzfsDD+QjjU3M8vnjtBujOJv//IDoqznbPO79VUFd9jj2MqKcG6aeNl78e0opS0j/0Z
      np/8FENmBqsKVvHknhZC0Tgm45tVPA429ZOdZqO2KI3gzpfxPfoYtuu343zXfYiW6RfrverN
      oP5QjBF/mOLsi8ewBHe+jGV1Lcb8i5vRWkfcPNZYT6bNzsc3XkuKdXqlVIy5uaT/xacZ+ffv
      IaWlYi4vRx4cIjE0RLyzE3loiOJhNwWKQl+Kk9wVZZhWrsR+880YMjPJTkvjyAtNPB2IsP6W
      HSRL4vjb8bXX8f70Zxhyskm+4w6SNm1EmKYQfKEoD7/SyKvHu7j72lW8Y1vlnFV2iLe3Ezl0
      iIzP/9VFhanFgqieNsScNZc0i8LZSfHma1BDIbz//T9kfeRjjAWjDHgC58rYqCuAIbEAABoa
      SURBVKrGvsZeNuQ7CP/m10QOHSbl/Q9gu+EGhBlW+rjqBdA77CfFZrlogrTsdhM5doz0T37i
      gvG1pmn0+X083HCcDXmF3LKyHLNhZpfLXFOD84H34nv4EZBEBIMRQ3Y2puIirOvWYsjJpT/J
      wmNNDXzi2m1kOCeK9IFbavnCD15k36lettcVYczJwfne+0m+820EX3kV38N/wPfoYzjefjdJ
      mzYh2ibOcVRVQ1ZVFEWltdfDj586itEg8jcPbqe6OHPOysJoioL/iaew1K7GXFl54ffxEJFn
      Po/SfxTTlk9j2vBRBHHy+Yzthh3Ibje+X/6CvNxtDLgD1JSMh2L0uf20dI9wu+cIcZNK1j/8
      HcaCgsvqxa56AZzuHqE4JwWT4cIHPLz/AJLN/qZz5DwC8RgP1x+nNiuXO8orp5Vg/VYEQcB+
      001YqqoQjEak1FSEt8wbSlSVVaMjPN/WwoPrNmI8T4g5aXbeub2S/93ZwIbyXGzWcbOk5HBg
      u+cetGu34X5hJx2/epTYc3vRbryFcHIKXn8EfyiGNxAhFE0QOrvyyts2r+K+6yvnvEZptLGR
      aFMT2Q/9/QUPoabEie3+d1R/P+btXyC2/4cIZifG1e9CECbpCUQR57vuQw2FyT7hoqFzmFs3
      lY2nPZ7oxOb3UlqcTfrHPorkvPwFOq56AfQM+yjNTbngbadFowR37Sb51lsueCgjiQR/qD9B
      stnMHRWX9/C/gSCKlxxewXjs+53l1Xxv3+vUDw2wPm/im+y2jSt4+WgH//HoIWwWI6PBKGPB
      KP5Q7OzKPGbU4uvRJAnroW6SfMdIVuNkramhuiQXh82MI8lMQaaDwizHnNfyUWOxcafXDTsw
      Fk2sw6NpGvFjvyZx+mmS3vUzpJxahKQ0oi//I4JkwFD9jslFYDCQ8oEHqIg8yb6OQWSvl9De
      fezZM8SOzRVkvvPaC+7dTLmqBeALxWjpGeHWjRdOyCMnTqIGgyRt2Tzhc1lVea6lidFImD/f
      vJUk49xXP3srTouF60vLeLGtheqsnAnWJafdwmffvZmn97VhNEiUF6aTYjOT5hjPmrJbTDjt
      ZuxWE1IsRmjXLgLPPY96oIXklNuxr9uBlDI/JUw0TSO0ew/y8DCZn//cBeKSz+wkcfQXWG77
      GmJ2DQCGVbdhDnuIvvovWIxWjOV3THoM0Wym6o4dPPzzV+j6m3/AG1Vwl9zE1m11s3744SoW
      gMsb5N/+sJ/cjGSqSyY6pDRZJvTa6yRtvgbxvO5T0zQO9nbROOziIxuuIdm8MGv8CoLAtYUl
      NAwN8nJ76wUe4qriTKqKp1GJ2ZCE/Y7bsW3fTujAAQLPPENw507sN9yA/dZbkZxzWw1bC4cJ
      /OlpHHfdiZQ6MYBPGWog9uo/Y9z4ZxhW3nLufARBxFj3PrREhNjLX0ewZWLIn3xx4Jw0O3ab
      Bd/K62jUHJRjpXiG65Jp2vh8SBLFCSXxr7pwaE3TqG938eUf78Rps/DVD2y7YMw7HvXZif2m
      G8/dGE3TaBwe4sW2Fu6tXk2hc/4rR5+PxWjkjvIqjvb30u+//PLggiAg2m0k33IzOd/4F1Ie
      eIDwkaMMfvFL+J99DjUyd6swBl54AQwGbDfdOOFz1T9A9PmvYii7CdOGD18wzBFECdOGj2Lc
      +BGiT38Bue/IpMfJcCaRYrfQVlzLsaDAjrUlM5rAq5rGicF+/nP/bn517DAt7uFztUelhx56
      6KFp72mWqKqKNANvpqZpoMogiNMau6qqxtP7W/n5M8e5eUMpn7h7/QUPv6aq+P74KKLZTPJd
      d57b70DAz8P1x9lRWsY1hYuznFF6ko0Bv48G1yDr8y/PqnE+gsGAqagQ23VbEW1WAk8/S+Tg
      QQx5eUjpk/sypkIeGWH05/+D893vwrLqTf+PFvURfeZLCGYHllsfQjBcvBcVBBEppw4tMEj8
      wI+QCjYh2i+ecCMIAk3dIxw5PYDHF+bT79g4rTipN976L7SdZmd7K5vyixAFgZ1nWjntdmE1
      Gpd2D6AONxP65duRW55DUyaPSwlF4/z3s8f5w6uNPHhbHR+8re6i1QsUr5foiZMkv+2Oc/bo
      sUiE3508RmVmFteVlM7LuUyXW1dW4A6FOD7QPyf706I+Yru+jtD7b6Q/uAnTihLc3/o3PD/6
      MYmhy1vCVVNV/E8+hZSehu26red9LhN96e/RIl4sd34LwTx5+qQgGTBf/0Wk4q1Env0i6mj3
      JbctL0zDNRpizcrsaS842O/38cMDe2gedvGR9Zu4dVUF99bU8dnrrifP4eTRUyeXtgDEzHKM
      NfcSffn/En3mi6ijXRcE02maxmggwjd+s5f9jX387Yeu55aNKy659FH44CFERzLmqnF7dVRO
      8FhjPXaTmbsrazBMYZ+ebzLtdraXrOClMy34o5dfIFbTNBRXI+HHPonqbsVY/XYSx/6LpOI+
      Mr/w/6GMeHD9/T/gf/oZtBku8Zjo7SO0Zw8p52V6aapC/NDPUIZOYbnjXxCTppfUIxjMWG7+
      e6ScOiLPfB41cPHqe6U5qYiiwPVrSqbcp6ppHOrt5n+OHiI72cEnNm1hRdqb88BUaxLvqKrl
      M1u2IWgLGJ6ZSCQuKxhO9fURe+0byL2HMF/7FxhXvxvBZEPTNE51DvOjJ46Q7kzic+/ZPGlJ
      PDUWY+hLX8F++2047roTWVV5qvkUnV4PH9u0hRTLwiyYMRWKqvL9A3soTU3jnsqaGQ9VtESU
      RONjxA/+BEPp9Zi2fx7RmoIy1EB050Ogylhu+yciLR58jz6OaDSS8uAHsaypm/JYmqIw8p3v
      gtFIxl/+BYIkjQ81mp8iuuvbWO/6NwyF18z4nLV4iMhzX0Yw2bHc/k8I4sTeW9U0dtf3sKU6
      H7Px0sOfQCzKM6ebaPW4ubOimo35k6dxLuk5wBsIFgeGVbcgphQS2/s95K7dCGmr2NcZ49//
      eIBNVfn8n3dtxjGFgydy4gSRo8dI++iHEcxmDvR2caCniw+vv4ZM28yrnc0XoiCQarHyfGsz
      FRlZOGYQ26IGXERf/FsSzU9h2f55TJs/iWgafymI9myM5XeguFuJ7fsPzFXrcLzjo8ijo/ge
      /gOJ3l6MJcVIkwQFxpqaCDz3HOmf/ASGs5YfdbiRyLNfxrz1LzFWTG7WvBSCZEIq3opc/wjI
      UaTcuonfCwIlOSmTLnjR7hnhdyePEUzE+dC6jZRnTL6GgaapV4YAYNxyIKavwlj9diKuM/z2
      mX08cjLOR25ayf23bpwyhVCTZcZ++WvMlRXYrt1C/dAAz7Y08+7atZSlTz/XdaFIS0rCGw5z
      YrCftbn5iFM44zRNRenaQ+TZLyKYbCTd812kwi0XhBwIBguGFTcg2rOI7/o2WrCX5Ls/jnXj
      FsKHD+N//Ak467x7a4yRGovh+dF/YalbjW3HDgRBQHGfJvLEX2Cqew+mjR+dYPFRNY1ALEaf
      b4wTg/3UDw2gqhoWoxGTJF3wcApGK0JyDtGXv4aQlIaUVTWtaxWTZV7raOOp5kZqc3J5oG49
      qdakyR/+WIDYnu9dOQKA8beAJyLw4xNWTgay+D85r7Mh9AySIxchtWTSE050d+P746Ok/dlH
      GJZEHq4/zraSMjYWTF5JTI2MgqogGObfIXY+giBQ4HTycnsryWYL+Y5L2701OU78yM+Ivfav
      GCvvxHLLQ4i2jEuelyCISJmVSAUbSTQ+TqLlOUzlW7Hdcg+GjAz8jz9B5PARDNlZGLLetMyE
      9x8gvG8/6Z/+FJLNhhbzE/nT55DSyzDf8NcgGQnF47R7PRwf6OOlM6281nmGo/29xGQZWVXZ
      19PF0f5eBvw+EMbH4+d72gVnAUJSBrFd30JMzkXKmDxDLxCL8r8nj9LsHuZ9a9aztagEwxTP
      mBb1EXnhqygDx66MOQCcrbfT5+U/Hz2EzWrkK++/jhQLxA/9hPjJhzEUXoP5us9eUgien/0c
      dXQM4c8/wS9PHKUkNY37aiaOeTVNRYuMorpbUPoOI3fuRvX3g6ogpq/EUHwtUuEWxLRSBGvq
      lAFdc8Gerg5e72zns9ddj9104RBPGWkj+vLX0EIjWG59CKngmhnNGbR4iOgrX0fueB3Lji9h
      qLwbNRzF/8SThF57HUtdHSkPvBfRZmPob/4O2/Xbcdz7TkiEiDz3VfzePgZ3/CM9UY3usVGG
      g0GSjEZyHQ6KUlIpTkmj0JmCUZIQgIicoMProcU9TJvHTVSWKU/PZHVOHiWpqefOMXHs18QO
      /BDrHd/AUHbDBe1WNY2GoQGea20my2bn3po6UizWKYY8GqrnDNGzcw3zrf/3yhCApmnsb+zj
      p08fY315Lh++fc05U5imqaiedmKv/QvqSBvmbX+FoeoeBOnN4yhjYwx+5avYP/Ih/iCBhsaH
      1m3EajShyTHUkTaUgWPIXXtRve1oUT+Gws2I+esxFGwEVUEeOIHSvRdlqB7BmISYVY2haDNS
      7jrE7Op5E0NMlvnJoX2IgkCKNQmTJCGJIkZRpDJwipzjP+aMMZexdZ/Cml6CJIoYRBGjOD7E
      MEoiBlFCEgRMZ6NZTdL4vyVRwiiJiJoKzU8S2/NdjKtuxXz9FxHMycRa2xh7+GESff0YCwuI
      uYYx/M1f05+Ikd/0G9S2F/nfko+j2PMoSU0jN9lBWXoGKRYrdtPU+cSRRII+3xgNrkGah8dN
      suUZmWwuLCY/ORn54I9JNDyC9e3fQ8pde+53UTnBC62nOTbQz7aSUraXrMBiuPRzpWkaWsyH
      OnCC6CtfR8pbj/mGv0ZMSlv6AojGZf74WhPPHTzDfddXcu/2qot6ATU5jtzyLLE930VIKcRy
      /ZcQc2oBgcCfnmbs1dc4+qEHaB8d5uM1q7B5W5A7XkUZOAFyDCGlECl/PYaS7Ui5a0AyXfBQ
      a6oCiTDK4EnkngMoPQfQQm5AQCrajJS3HkPRZgR7DoJx7sIoRiNhDvX2kFAV4rKMHBmjoOnX
      1Iaa6C27l/2pW5E1iCnj32ucveloaBpv/v/srVYnfK6d2z4t1Ms9A49gN1t4sfB9jNoKETUN
      x8kGVp9q5vC61QytKKFmZC+3jb5K8MavYyq8BqfFgkGcnrPyYmiaRkJV6Rkb5XBfD+2eESRR
      pCIjg4rupyjsfw3b3d9BzF3DUDDAIw0nkFWV99SuoeANj70SR0uE0SJjaP4+VF8/qrcDdbQb
      1duBFg8iSGaMq9+NadPHEM4m1yxpAURiCX7w+GGaut185h2b2FCRO+VFVv0DxPb/ALntJUzr
      Poih9v24//WbjKRHGMxUqIx1kxIfQbRnI+asxlB8HVJW5dmh08zcIpqmovkHUIbqUXoOIvcf
      QwsMIaaVIuXUjYsifz1i0twtKKEMnCD6+jdBlTHf8BWkvPUXvSayqqBqGoqqoagqqqYhq+P2
      /oSqjvsJVBVZ0855TGVVwZwIkl3/3wRaX+LMqgeg+p0kFGU8i81mI9V1GMeB72C94csYK++e
      s/N6A03TGItGaPeM0OAapMfr5sa+R1kv99Bx7d/xzHCU0iSJ23JSSA71o471oHraUYNDaGEv
      WtiDYLIjJOcgpq1ATC1CTClGTClCSEpHdEysbj0vAtA0laDfh2Sxk2R+84GfqQDqu4b4xiO7
      2bwhl9riLFKtSaRZk3BYLJglCYMoYZSkC5xemqqgdO0mtvvfUENelHCYmMVGckEdhrIbkfLW
      IToLxt/yM3zoL33OGsgx1MAgSs8BlP6jKIMn0BLRcbE5CxAcuQgWB4I1DcGWOd4F27NBNCAY
      zCAZQTROGL6d278cI3HqMWL7v49hxQ1YdnwFwTK3wW3njqUkSDQ9SXzvf2BYsQPz9i8gWFNQ
      RlqJPPbnGGvvw3TtZ+bs2l0KVdMIx+N0DPeRfeR7aL0HUAUjdoOAKBkRzMkIKYWIyXmI6SsQ
      U0sRU0vGPdCiESTj1GVZ5kMAY0NdnO4eQVZg87UbMZ5tw4x7gESCPV0deCNh/LEo/liUYCxG
      IhbDbjSRLIo4jSackoEsi5U0s5k0gxGbZABFRguPEXzqx5yypWB+58fZuqp2rk91UrRYEGWk
      BXXoFFrYixoYQIsF0WL+8a46MgqxABitCNaU8TeXyY6QlIpgy0QwOxDsWQhmB/KZnSi9hzDf
      8NcYKt62IBNwZeAE0Vf+ESQT5i2fIbb724hZVVhu/RqCtLBWMU2OIre/imCwjF8beyaCLWv2
      8VLzIYDBzkaMWVWE+xpILlmD/WxdoGg0iizLGM5LLdQ0DUVRxjOdzjNfqaqK4nIR//Vv0OJx
      lEiURDyOHI+hahoCAuPnLiAKb/4tiSKCwNkuXSViMtF13zvYcc2Wc+Y2VVVRVRVRFCfY19+o
      WyS9xUYtn63iNt12T7pvUUDQFDRVBiWBHAujRv1IUQ9aZHRcFKERtLAbKRFAivsRoqNoziKU
      jZ+B1JUIojjhmG/s+63HfKPdszkfJeRF3fttjIMHkNMqkW77BoLZMW/XKhKJYD2bd70Q92Ne
      BDDU1UzcVkCgp4XStRtJOtuemfYAajhM+OBBNEVFtFgQDAYwGhCMZy0MRiOCNF7iDoNhvNyd
      yUwCjYAi44/HiRkkyrNyJqQaXmloqjLtiNj5Or46VI/gLES0LT2n4WyYFwEoiTANJ05iz11F
      WUEGb9y22fgBdHTmgyVtBdLRmW+WdDi0js58owtAZ1mjC0BnWaMLQGdZs+BlUZbaInA6y5sF
      FYAgCCgzyD/VzsapTJUMMhmKoswqB2G2v5+Lfaiqem5pn8X4Pcz+HJbqvVxQARhmWFz2jd5i
      NjdO07QZH/d83uqFXIw2zPY6vOEhnc3DN9vroJ4NwLvcB/hiHuHL2cdb78OSrgw3F57P2b69
      r4Y2zObBn6s2LPbv4eL3YUEdYTo6Sw3dCjQDNFXB63bh9YXQNIWR4SFC0QSaKjPm86FqGpo6
      /rkvdH5NH41YLEYsFmM6bxtNiTHqD83XacwaVY7hGhwkFE0gxyO4XMMkVA0lEWMsEAJU3EMD
      DAwMvOU6KMSiCWKx+JTXQdM0fGNjKHOzItQl0QUwAyIBD4PuUdqbGuhsb6V7yE19QxNj7iEa
      TrcQT2j0tzfR6/ISjkxc23a4p4361p5pHEWju6WJQydPzc9JzAHuwT5GfT5ONbVwpukUw8P9
      NLX2MtjXTcuZDkAjGg4z1t9Gu+t8Iau0NhyhZ3jq2qcx3wCvvb6LwPQWmbxsdAHMAKsjk+Ic
      J9aUbCKyRl1NDSk2AVt6PvkZKQiA1zNCwOfFH4qiaSpjXjdjPi+y5ER0N9I1BnIiwJH9hzjV
      0klv035+87tH2HfyDABR3whRcxaZ9qU7PcvKL8WZZCAzMwPZlExtTR3IfgpKVuFMMgEShaUr
      0MxprC5JAyWO2z1C75kecleuoKO5nrgMw93tNJw6Seegh307n+Dh3/+BTncQTU3Q1jNG1cpL
      r6swV+gCmAERv5v+MYWayhKS1DjeUIRIROb8OabF5mT1ug0Eh3pJqBrBgI9oQmag8wzpeYWo
      GoBG0DeKYDBjMFmoqK7FLI7HuLsHe+jrPkNTSwe+8MzX6V0IXD3taPZsSguyUKNhQpEAsjJR
      sNHACAZ7OgZRAFVmzOcnoSh0tPeQX5g7noesJBgb82M2W7A6MqgtL0JWVKK+YYZcgzScaqLP
      5Z3Xc9EnwTMg4O7haGMnRquNtXU1tNQfJ3NFLZbIEKfa+7E6sllXU8ipk6dIL66kOCcVgfHw
      8M6eEUpybASldBzGGD5/jGjIj1FK0NjaR2nVGoxqiJzsHARBYMg1RE52zmKf8kXpbjlJt8uH
      LT2fyjwb9ad7qF2/jsGWE/R7gmQXV1KYKiEkZWA3v/l2CI704RNSsIkx7M50YoExRIsZr8dH
      1DfAgFemYlUBRnsWqUkGRkeGsKbkYJnHzlAXgM6yRh8C6SxrdAHoLGt0Aegsa3QB6CxrdAHo
      TAtNTXB878s898o+wvGpInpV4vHpmXDlaICdL+7EH02gxAK8tvMFOod8F3iKGxsbLrmPjvq9
      PPLoYzR1DU/4nSLHUdTJbTy6AHSmRd/JXXQpOaxOj/HCwWbcHi9K1I/HH6a9uYGmM73EQ166
      e3tpOb2f73zrfxj0BunvaOZ0Rz/BsRF6ujsYCyugJmg9dZLuIS/N+56hya1ilEQOvvwMtrwV
      7HnuKdzDg/T09OMLBWmuP8GLu/aRiPipP34cbzCKa2iI3s5uZGCg+wybbryLhp2P0O/1U3/i
      GN1DI+z8/Q/446sniUaCNBw/jtt/4QqZS9fdqLOk8AwHKa7OIzfJxMjLnewKDHBnjZMD7nRi
      zQc40jbAB++6hj81aTz4tgLsNgeWSBff/OkjaLKRW28rozecz3veVkLX0V20x1Pxnnye6jwr
      KRkZSKLAaCTOpsJC+o/vpmHX0ww5NlEtHGA4pQazQWTfs79nT5sHx6kuLCNtbLnng7xR6VOQ
      zJQUpjDY18exPa/iijrZtsJGSkoKx154hJ3Ng9ize/j8n71jwnnpAtCZFiVVxTyxZzcDwgjl
      1TfQ37CX+tMewkTxak5qSuMoKpSvXkdejhkjh4gqUFBaxbUbapDDndSurMNmEhk1Goh4/cia
      gDMlhQwtE5MksrIgl9dfeYmYIZtC+whZa9diau4kHAySkFVMSU7Wb6ljRUkOR/dGqSnLQwSU
      eJTmk4dxDUKduQ1n2Qbo6iUz20Gzb4xUs421W25iVXHBBeelO8J0pomG1zVAb08nYtpK8pNV
      YqqI3ZFCwDOMYLaSarcQFyw4rEbcAz0YHVkowRH8cZGsdDui0YbVJIEmM9Dbh9GRQapFIKKZ
      SLYa0VSZocEhHOk5SHIALKmYiNLb58KYZCPLmUT/wBC21CwMyDidKQgCBLwuhkdDZOYWYDPI
      9A2NYE1KJjXZTL9rlLzsNIYGBrGkZJKVOnHpVl0AOssafRKss6z5f8VMA6RrHDY0AAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Count of returns by product' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit by city' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit by segment' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit ratio per person' width='192'>
      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
      FajCseb/B5N+1YwkEls1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Profit ratio per unique users' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales per subcat' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
